"use client";
import { Suspense, useState } from "react"
import { Canvas, useLoader } from "@react-three/fiber"
import { Environment, OrbitControls } from "@react-three/drei"
import { GLTFLoader } from "three/examples/jsm/loaders/GLTFLoader"
import { PerspectiveCamera, PresentationControls, ContactShadows, Html, useFBX } from '@react-three/drei';
import { useRef } from "react";
import { useFrame } from "@react-three/fiber";
import SlowmotionText from "./Text_slowmotion";

const Model = () => {
  
  const modelRef = useRef();
  const [showHtml, setShowHtml] = useState(false);
  const textLine1 = "Discover, Analyze, Act:";
  const textLine2 = "Your Gateway to Data Driven Decisions";

  useFrame(({ camera }) => {
    if(camera.position.z > 10)
    {
      modelRef.current.rotation.y += 0.0078;
      modelRef.current.rotation.x += 0.0001;
    }
    else{
      modelRef.current.rotation.y += 0.002;
    }
     // Adjust zoom speed as needed
    if(camera.position.z > 22)
    {
      camera.position.z -= 0.4
    }
    if (camera.position.z > 6 && camera.position.z < 22) { 
      camera.position.z -= 0.25; // Adjust the zoom-in speed
    }
    if (camera.position.z > 4.5 && camera.position.z < 6) { 
      camera.position.z -= 0.15; // Adjust the zoom-in speed
    }
    if (camera.position.z <= 4.5) {
      setShowHtml(true);
    } else {
      setShowHtml(false);
    }
  });

  const gltf = useLoader(GLTFLoader, '/earth/scene.gltf');

  return (
    <mesh ref={modelRef}>
      <primitive object={gltf.scene} scale={5} />
      { showHtml &&
        <Html>
          <div className="text-[#e9cdcd] absolute inset-x-0 top-28 h-16 drop-shadow-md [text-shadow:_0_0px_0_rgb(100_76_112_/_20%)]">
            <h1 className="text-6xl pb-16 font-semibold">
              <SlowmotionText text={textLine1} delay={120}/>
            </h1>
            <h2 className="text-5xl px-4 font-semibold">
              <SlowmotionText text={textLine2} delay={textLine1.length * 120 + 120} />
            </h2>
          </div>
        </Html>      
      }
    </mesh>
  );
};

//<primitive object={gltf.scene} scale={5} />
export default function Model_page() {
  return (
    <div className="earth">
        <Canvas shadows dpr={[0.1, 1]} camera={{ position: [0, 0, 10], fov: 70 }}>
        <PerspectiveCamera makeDefault fov={68} position={[-1, -1, 80]} focusDistance={[1, 0]} near={0.1}  far={1000} />
          <ambientLight color="#dbc7a9" intensity={0.5} />
          <spotLight position={[10, 10, 10]} angle={0.15} penumbra={1} shadow-mapSize={[512, 512]} castShadow />
          <Suspense fallback={null}>
            <PresentationControls
                    global={false}
                    config={{ mass: 1, tension: 5 }}
                    snap={{ mass: 1, tension: 50 }}
                    >
                    <Model />
            </PresentationControls>
            <OrbitControls enableRotate={false} enablePan={false} enableZoom={false} />
            <Environment preset="sunset" />
            <ContactShadows position={[0, -1.4, 0]} opacity={0.35} scale={10} blur={2.5} far={4} />
          </Suspense>
        </Canvas>
      </div>
  )
}



